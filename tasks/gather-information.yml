- name: check if a certificate is present
  stat:
    path: "/etc/letsencrypt/live/{{ letsencrypt_domain_names[0] }}/fullchain.pem"
  register: letsencrypt_stat


- name: get certificate expiry date
  shell: |
    date --date="$(openssl x509 -in /etc/letsencrypt/live/{{ letsencrypt_domain_names[0] }}/fullchain.pem -noout -enddate | cut -d= -f 2)" +%s
  register: letsencrypt_expiry_date_check
  when: letsencrypt_stat.stat.exists == True


- name: get certificate domain names
  shell: |
    openssl x509 -noout -text -nameopt multiline -in /etc/letsencrypt/live/{{ letsencrypt_domain_names[0] }}/fullchain.pem \
      | grep '    DNS:' \
      | sed -e 's/DNS:/ /g' -e 's/,//g' -e 's/  */ /g' -e 's/^[ \t]*//'
  register: letsencrypt_certificate_domain_names
  when: letsencrypt_stat.stat.exists == True


- name: set certificate facts
  set_fact:
    letsencrypt_certificate_expiry_date_seconds: "{{ letsencrypt_expiry_date_check.stdout }}"
    letsencrypt_current_date_seconds: "{{ ansible_date_time['epoch'] }}"
    letsencrypt_certificate_domain_names: "{{ letsencrypt_certificate_domain_names.stdout }}" # TODO split
    #cacheable: True
  when: letsencrypt_stat.stat.exists == True


- name: calculate time until certificate expiration
  set_fact:
    letsencrypt_expiry_time_days: "{{ ( (letsencrypt_certificate_expiry_date_seconds | int - letsencrypt_current_date_seconds | int ) / 86400 ) | round }}"
    #cacheable: True
  when: letsencrypt_stat.stat.exists == True


- name: set fact for certificate domain name comparison to default value
  set_fact:
    letsencrypt_certificate_names_match: False
    #cacheable: True


- name: set fact for certificate domain name comparison
  set_fact:
    letsencrypt_certificate_names_match: True
    #cacheable: True
  when: letsencrypt_certificate_domain_names == letsencrypt_domain_names | sort | join(' ')


- name: set renewal required fact
  set_fact:
    letsencrypt_renew: True
    #cacheable: True
  when: letsencrypt_stat.stat.exists == False or letsencrypt_expiry_time_days | int <= letsencrypt_renew_days_max | int or letsencrypt_certificate_names_match == False
